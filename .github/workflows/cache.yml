name: Cache MFL Data

on:
  push:
    branches:
      - main # Or your default branch
  schedule:
    # Runs every 6 hours, adjust as needed for less frequent updates than Netlify
    # Netlify handles more frequent updates; this is a fallback/backup.
    - cron: "0 */6 * * *"
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Needed to commit back to the repo

jobs:
  fetch_and_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Or your preferred LTS version that supports node-fetch and fs/promises
          cache: "npm"

      - name: Install dependencies (if scripts/fetch-mfl-data.js has its own package.json or uses top-level ones)
        run: npm install node-fetch # Assuming node-fetch is the only direct dependency not in Node core
        # If your script relies on other packages from the main package.json, run `npm ci`

      - name: Fetch MFL Data
        env:
          MFL_LEAGUE_ID: ${{ secrets.MFL_LEAGUE_ID }} # Use a repository secret for the League ID
        run: node scripts/fetch-mfl-data.js

      - name: Commit and push if data changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/data/
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Update MFL cached data"
            git push
          else
            echo "No changes to MFL cached data."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The default GITHUB_TOKEN has write permissions for contents 